# ==========================
# File lists
# ==========================

OBJECTS = common/errors.o common/debugging.o common/garray.o \
  vm/module.o vm/mem.o vm/types.o vm/objects.o vm/arrays.o vm/functions.o vm/vm.o \
  vm/code.o vm/exceptions.o vm/stack.o \
  io/decoder.o \
  runtime/runtime.o runtime/stringp.o runtime/objectp.o runtime/support.o \
  runtime/integerp.o runtime/specialp.o runtime/exceptionsp.o \
  september.o

SOURCES = $(OBJECTS:.o=.c)
DEPS = $(OBJECTS:.o=.d)

# ==========================
# System dependent parts
# ==========================

ifneq (,$(findstring Windows,$(OS)))
	ifneq (,$(MINGDIR))
$(info == Using the MinGW version of the Makefile.)
		include Makefile.mingw
	else
$(error Under Windows, only MinGW is supported, and MINGDIR was not set.)
	endif
else
$(info == Using the Linux/Unix version of the Makefile.)
	include Makefile.unix
endif

# ==========================
# Executable
# ==========================

$(OUT): $(OBJECTS)
	$(CC) $(OBJECTS) $(LDFLAGS) -o$(OUT)

# ==========================
# Phony targets
# ==========================

.PHONY: clean deps all

all: $(DEPS) $(OUT)	
	
deps: $(DEPS)
	
clean:
	$(RM) $(OUT) $(OBJECT_FILES) $(DEP_FILES)

# ==========================
# Autogenerated dependencies
# ==========================

# clean does not need dependencies
ifneq ($(MAKECMDGOALS),clean)
    -include $(DEPS)
endif

# how to make a .d file
%.d: %.c
	$(CC) -MM $< -MT $(<:.c=.o) >$@
