# Sink argument as the only argument
print_all := |...things| {
	for (thing) in (things) { print(thing) }
}

# Sink argument preceded by normal ones
print_multiplied := |multiplier, ...things| {
	for (thing) in (things) { print(multiplier * thing) }
}

# Lazy sink argument
do_in_order := |...?actions| {
	return_value := x
	for (action) in (actions) {
		action.resolve()
	}
	return: return_value
}

# Test various call variants
print("This should print nothing safely.")
print_all()

print("This should print 1,2,3.")
print_all(1, 2, 3)

print("This should print nothing safely.")
print_multiplied(2)

print("This should print 3,6.")
print_multiplied(3, 1, 2)

x := 12;
print("This should print 12,42.")
before_change := do_in_order(x = x + 9, x = x * 2)
print(before_change, x)
